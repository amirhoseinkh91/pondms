package ir.viratech.pond_ms.api.layer.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.layer.dto.PondFullDTO;
import ir.viratech.pond_ms.model.layer.Pond;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "Pond".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BasePondFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<Pond> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "PondFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<PondFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "title".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Title(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * Creates an EntityByDtoFinder for the DTO property "layer".
		 * The created object finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
		 * by DTO's of type "ir.viratech.pond_ms.api.layer.dto.LayerLightDTO".
		 * @return the created EntityByDtoFinder
		 */
		protected abstract ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> createEntityByDtoFinder_Layer();
		
		private ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> entityByDtoFinder_Layer;
		
		/**
		 * Getter for the previously created EntityByDtoFinder for property "layer".
		 * @return the previously created EntityByDtoFinder object 
		 */
		public final ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> getEntityByDtoFinder_Layer() {
			return this.entityByDtoFinder_Layer;
		}
		
		/**
		 * Finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
		 * by DTO's of type "ir.viratech.pond_ms.api.layer.dto.LayerLightDTO".
		 * It is targeted for the DTO property: layer
		 * @param layerDto 
		 *		the given dto by which the entity should be found
		 * @return the found entity
		 * @throws ir.viratech.commons.api.search.InvalidDtoException
		 * 		If the given dto is not valid or is not representing an internal entity
		 */
		public final ir.viratech.pond_ms.model.layer.ParentLayer findByDto_Layer(ir.viratech.pond_ms.api.layer.dto.LayerLightDTO layerDto) throws ir.viratech.commons.api.search.InvalidDtoException {
			return this.getEntityByDtoFinder_Layer().findByDto(layerDto);
		}
		
		/**
		 * creates a DtoFieldInfo for dto-property "layer".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param fieldInfoContext the FieldInfoContext of the dto-property: layer
		 * @param entityByDtoFinder the EntityByDtoFinder for the dto-property: layer
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.DtoFieldInfo<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> createFieldInfo_Layer(
				String externalName, String internalName, String internalSearchExpression, String bundleKey, boolean searchable, 
				ir.viratech.commons.api.search.field.FieldInfoContext<ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> fieldInfoContext, 
				ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> entityByDtoFinder) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Dto<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO>(
						externalName, internalName, internalSearchExpression, bundleKey, searchable, fieldInfoContext, entityByDtoFinder);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "timeSeries".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_TimeSeries(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Title("title", "title", "title", null, "title", true, null));
			this.entityByDtoFinder_Layer = createEntityByDtoFinder_Layer();
			this.putFieldInfo(this.createFieldInfo_Layer("layer", "layer", "layer", "layer", true, 
					getFieldInfoContextInstance(ir.viratech.pond_ms.api.layer.dto.LayerLightDTO.FieldInfoContext.class), this.getEntityByDtoFinder_Layer()));
			this.putFieldInfo(this.createFieldInfo_TimeSeries("timeSeries", "timeSeries", "timeSeries", "collection", "timeSeries", true, null));
		}
		
		/**
		 * Creates a DTO of type "PondFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public PondFullDTO createDto() {
			return new PondFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public PondFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(PondFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// title
	
	private String title;
	
	/**
	 * Getter for property "title".
	 *
	 * @return the value of property "title"
	 */
	@JsonProperty
	public String getTitle() {
		return this.title;
	}
	
	/**
	 * Setter for property "title".
	 *
	 * @param title the new value for property "title"
	 */
	public void setTitle(String title) {
		this.title = title;
	}
	
	
	// layer
	
	private ir.viratech.pond_ms.api.layer.dto.LayerLightDTO layer;
	private boolean __modified__Layer = false;
	
	/**
	 * Getter for property "layer".
	 *
	 * @return the value of property "layer"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.api.layer.dto.LayerLightDTO getLayer() {
		return this.layer;
	}
	
	/**
	 * Setter for property "layer".
	 *
	 * @param layer the new value for property "layer"
	 */
	public void setLayer(ir.viratech.pond_ms.api.layer.dto.LayerLightDTO layer) {
		this.__modified__Layer = true;
		this.layer = layer;
	}
	
	/**
	 * Shows the modification state of the property "layer".
	 * 
	 * @return true if the property is modified
	 */
	public boolean hasModifiedLayer() {
		return this.__modified__Layer;
	}
	
	/**
	 * Used for loading the property layer from a given internal entity.
	 * 
	 * @param pond the given internal entity
	 * @return the value of property layer based on the given internal entity
	 */
	protected ir.viratech.pond_ms.api.layer.dto.LayerLightDTO load_Layer(Pond pond) {
		ir.viratech.pond_ms.model.layer.ParentLayer __internalProperty_layer = pond.getLayer();
		if (__internalProperty_layer == null)
			return null; 
		ir.viratech.pond_ms.api.layer.dto.LayerLightDTO layer = new ir.viratech.pond_ms.api.layer.dto.LayerLightDTO();
		layer.loadFrom(__internalProperty_layer);
		return layer;
	}
	
	/**
	/**
	 * Used for saving a given value of property layer to a given internal entity.
	 * 
	 * @param pond
	 * 		the given internal entity
	 * @param layerDto 
	 * 		the value of property layer which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property layer is not appropriate for saving the entity
	 */
	protected void save_Layer(Pond pond, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO layerDto)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		ir.viratech.pond_ms.model.layer.ParentLayer __internalProperty_layer = null;
		if (layerDto != null) {
			try {
				__internalProperty_layer = findByDto_Layer(layerDto);
			} catch (ir.viratech.commons.api.search.InvalidDtoException e) {
				throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("The given dto is invalid: "+layerDto, e);
			}
			if (__internalProperty_layer == null)
				throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("No entity was found for the given dto: "+layerDto);
		}
		pond.setLayer(__internalProperty_layer);
	}
	
	/**
	 * Finds entities based on the DTO property "layer".
	 * It finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
	 * based on DTO's of type "ir.viratech.pond_ms.api.layer.dto.LayerLightDTO",
	 * targeted on the DTO property "layer".
	 * 
	 * @param layerDto 
	 *		the given dto by which the entity should be found
	 * @return the found entity
	 * @throws ir.viratech.commons.api.search.InvalidDtoException
	 * 		If the given dto is not valid or is not representing an internal entity  
	 */
	protected ir.viratech.pond_ms.model.layer.ParentLayer findByDto_Layer(ir.viratech.pond_ms.api.layer.dto.LayerLightDTO layerDto) throws ir.viratech.commons.api.search.InvalidDtoException {
		return this.getFieldInfoContext().findByDto_Layer(layerDto);
	}
	
	
	// timeSeries
	
	private ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> timeSeries;
	
	/**
	 * Getter for property "timeSeries".
	 *
	 * @return the value of property "timeSeries"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> getTimeSeries() {
		return this.timeSeries;
	}
	
	/**
	 * Setter for property "timeSeries".
	 *
	 * @param timeSeries the new value for property "timeSeries"
	 */
	public void setTimeSeries(ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> timeSeries) {
		this.timeSeries = timeSeries;
	}
	
	/**
	 * Used for loading the property timeSeries from a given internal entity.
	 * 
	 * @param pond the given internal entity
	 * @return the value of property timeSeries based on the given internal entity
	 */
	protected abstract ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> load_TimeSeries(Pond pond);
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "Pond".
	 * 
	 * @param pond the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(Pond pond) {
		this.uid = pond.getExtuid();
		this.title = pond.getTitle();
		this.layer = this.load_Layer(pond);
		this.timeSeries = this.load_TimeSeries(pond);
	}
	
	/**
	 * Saves this DTO to an entity object of type "Pond".
	 * 
	 * @param pond the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(Pond pond) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		pond.setTitle(this.title);
		if (this.hasModifiedLayer()) {
			this.save_Layer(pond, this.layer);
		}
		//Disabled save for property: timeSeries
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("title", this.title);
		data.put("layer", this.layer);
		data.put("timeSeries", this.timeSeries);
		return data;
	}
	
}
