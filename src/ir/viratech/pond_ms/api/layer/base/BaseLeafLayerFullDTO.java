package ir.viratech.pond_ms.api.layer.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.layer.dto.LeafLayerFullDTO;
import ir.viratech.pond_ms.model.layer.LeafLayer;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "LeafLayer".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseLeafLayerFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<LeafLayer> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "LeafLayerFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<LeafLayerFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "name".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Name(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "creationDate".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_CreationDate(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Timestamp(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "formInstance".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_FormInstance(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * Creates an EntityByDtoFinder for the DTO property "parentLayer".
		 * The created object finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
		 * by DTO's of type "ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO".
		 * @return the created EntityByDtoFinder
		 */
		protected abstract ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> createEntityByDtoFinder_ParentLayer();
		
		private ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> entityByDtoFinder_ParentLayer;
		
		/**
		 * Getter for the previously created EntityByDtoFinder for property "parentLayer".
		 * @return the previously created EntityByDtoFinder object 
		 */
		public final ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> getEntityByDtoFinder_ParentLayer() {
			return this.entityByDtoFinder_ParentLayer;
		}
		
		/**
		 * Finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
		 * by DTO's of type "ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO".
		 * It is targeted for the DTO property: parentLayer
		 * @param parentLayerDto 
		 *		the given dto by which the entity should be found
		 * @return the found entity
		 * @throws ir.viratech.commons.api.search.InvalidDtoException
		 * 		If the given dto is not valid or is not representing an internal entity
		 */
		public final ir.viratech.pond_ms.model.layer.ParentLayer findByDto_ParentLayer(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentLayerDto) throws ir.viratech.commons.api.search.InvalidDtoException {
			return this.getEntityByDtoFinder_ParentLayer().findByDto(parentLayerDto);
		}
		
		/**
		 * creates a DtoFieldInfo for dto-property "parentLayer".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param fieldInfoContext the FieldInfoContext of the dto-property: parentLayer
		 * @param entityByDtoFinder the EntityByDtoFinder for the dto-property: parentLayer
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.DtoFieldInfo<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> createFieldInfo_ParentLayer(
				String externalName, String internalName, String internalSearchExpression, String bundleKey, boolean searchable, 
				ir.viratech.commons.api.search.field.FieldInfoContext<ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> fieldInfoContext, 
				ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> entityByDtoFinder) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Dto<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO>(
						externalName, internalName, internalSearchExpression, bundleKey, searchable, fieldInfoContext, entityByDtoFinder);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Name("name", "name", "name", null, "name", true, null));
			this.putFieldInfo(this.createFieldInfo_CreationDate("creationDate", "creationDate", "creationDate", null, "creationDate", true, true));
			this.putFieldInfo(this.createFieldInfo_FormInstance("formInstance", "formInstance", "formInstance", "collection", "formInstance", true, null));
			this.entityByDtoFinder_ParentLayer = createEntityByDtoFinder_ParentLayer();
			this.putFieldInfo(this.createFieldInfo_ParentLayer("parentLayer", "parentLayer", "parentLayer", "parentLayer", true, 
					getFieldInfoContextInstance(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO.FieldInfoContext.class), this.getEntityByDtoFinder_ParentLayer()));
		}
		
		/**
		 * Creates a DTO of type "LeafLayerFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public LeafLayerFullDTO createDto() {
			return new LeafLayerFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public LeafLayerFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(LeafLayerFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// name
	
	private String name;
	
	/**
	 * Getter for property "name".
	 *
	 * @return the value of property "name"
	 */
	@JsonProperty
	public String getName() {
		return this.name;
	}
	
	/**
	 * Setter for property "name".
	 *
	 * @param name the new value for property "name"
	 */
	public void setName(String name) {
		this.name = name;
	}
	
	/**
	/**
	 * Used for saving a given value of property name to a given internal entity.
	 * 
	 * @param leafLayer
	 * 		the given internal entity
	 * @param name 
	 * 		the value of property name which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property name is not appropriate for saving the entity
	 */
	protected void save_Name(LeafLayer leafLayer, String name)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		leafLayer.setName((String) name);
	}
	
	
	// creationDate
	
	private java.util.Date creationDate;
	
	/**
	 * Getter for property "creationDate".
	 *
	 * @return the value of property "creationDate"
	 */
	@JsonProperty
	public java.util.Date getCreationDate() {
		return this.creationDate;
	}
	
	
	// formInstance
	
	private com.fasterxml.jackson.databind.node.ObjectNode formInstance;
	
	/**
	 * Getter for property "formInstance".
	 *
	 * @return the value of property "formInstance"
	 */
	@JsonProperty
	public com.fasterxml.jackson.databind.node.ObjectNode getFormInstance() {
		return this.formInstance;
	}
	
	/**
	 * Setter for property "formInstance".
	 *
	 * @param formInstance the new value for property "formInstance"
	 */
	public void setFormInstance(com.fasterxml.jackson.databind.node.ObjectNode formInstance) {
		this.formInstance = formInstance;
	}
	
	/**
	 * Used for loading the property formInstance from a given internal entity.
	 * 
	 * @param leafLayer the given internal entity
	 * @return the value of property formInstance based on the given internal entity
	 */
	protected abstract com.fasterxml.jackson.databind.node.ObjectNode load_FormInstance(LeafLayer leafLayer);
	
	/**
	/**
	 * Used for saving a given value of property formInstance to a given internal entity.
	 * 
	 * @param leafLayer
	 * 		the given internal entity
	 * @param formInstance 
	 * 		the value of property formInstance which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property formInstance is not appropriate for saving the entity
	 */
	protected abstract void save_FormInstance(LeafLayer leafLayer, com.fasterxml.jackson.databind.node.ObjectNode formInstance)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	
	// parentLayer
	
	private ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentLayer;
	private boolean __modified__ParentLayer = false;
	
	/**
	 * Getter for property "parentLayer".
	 *
	 * @return the value of property "parentLayer"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO getParentLayer() {
		return this.parentLayer;
	}
	
	/**
	 * Setter for property "parentLayer".
	 *
	 * @param parentLayer the new value for property "parentLayer"
	 */
	public void setParentLayer(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentLayer) {
		this.__modified__ParentLayer = true;
		this.parentLayer = parentLayer;
	}
	
	/**
	 * Shows the modification state of the property "parentLayer".
	 * 
	 * @return true if the property is modified
	 */
	public boolean hasModifiedParentLayer() {
		return this.__modified__ParentLayer;
	}
	
	/**
	 * Used for loading the property parentLayer from a given internal entity.
	 * 
	 * @param leafLayer the given internal entity
	 * @return the value of property parentLayer based on the given internal entity
	 */
	protected ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO load_ParentLayer(LeafLayer leafLayer) {
		ir.viratech.pond_ms.model.layer.ParentLayer __internalProperty_parentLayer = leafLayer.getParentLayer();
		if (__internalProperty_parentLayer == null)
			return null; 
		ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentLayer = new ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO();
		parentLayer.loadFrom(__internalProperty_parentLayer);
		return parentLayer;
	}
	
	/**
	/**
	 * Used for saving a given value of property parentLayer to a given internal entity.
	 * 
	 * @param leafLayer
	 * 		the given internal entity
	 * @param parentLayerDto 
	 * 		the value of property parentLayer which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property parentLayer is not appropriate for saving the entity
	 */
	protected void save_ParentLayer(LeafLayer leafLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentLayerDto)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		if (parentLayerDto == null)
			throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("The given dto must not be null.");
		ir.viratech.pond_ms.model.layer.ParentLayer __internalProperty_parentLayer = null;
		try {
			__internalProperty_parentLayer = findByDto_ParentLayer(parentLayerDto);
		} catch (ir.viratech.commons.api.search.InvalidDtoException e) {
			throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("The given dto is invalid: "+parentLayerDto, e);
		}
		if (__internalProperty_parentLayer == null)
			throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("No entity was found for the given dto: "+parentLayerDto);
		leafLayer.setParentLayer(__internalProperty_parentLayer);
	}
	
	/**
	 * Finds entities based on the DTO property "parentLayer".
	 * It finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
	 * based on DTO's of type "ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO",
	 * targeted on the DTO property "parentLayer".
	 * 
	 * @param parentLayerDto 
	 *		the given dto by which the entity should be found
	 * @return the found entity
	 * @throws ir.viratech.commons.api.search.InvalidDtoException
	 * 		If the given dto is not valid or is not representing an internal entity  
	 */
	protected ir.viratech.pond_ms.model.layer.ParentLayer findByDto_ParentLayer(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentLayerDto) throws ir.viratech.commons.api.search.InvalidDtoException {
		return this.getFieldInfoContext().findByDto_ParentLayer(parentLayerDto);
	}
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "LeafLayer".
	 * 
	 * @param leafLayer the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(LeafLayer leafLayer) {
		this.uid = leafLayer.getExtuid();
		this.name = leafLayer.getName();
		this.creationDate = leafLayer.getCreationDate();
		this.formInstance = this.load_FormInstance(leafLayer);
		this.parentLayer = this.load_ParentLayer(leafLayer);
	}
	
	/**
	 * Saves this DTO to an entity object of type "LeafLayer".
	 * 
	 * @param leafLayer the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(LeafLayer leafLayer) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		this.save_Name(leafLayer, this.name);
		//Disabled save for property: creationDate
		this.save_FormInstance(leafLayer, this.formInstance);
		if (this.hasModifiedParentLayer()) {
			this.save_ParentLayer(leafLayer, this.parentLayer);
		}
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("name", this.name);
		data.put("creationDate", this.creationDate);
		data.put("formInstance", this.formInstance);
		data.put("parentLayer", this.parentLayer);
		return data;
	}
	
}
