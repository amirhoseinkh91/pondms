package ir.viratech.pond_ms.api.layer.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.layer.dto.ParentLayerFullDTO;
import ir.viratech.pond_ms.model.layer.ParentLayer;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "ParentLayer".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseParentLayerFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<ParentLayer> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "ParentLayerFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<ParentLayerFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "name".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Name(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "creationDate".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_CreationDate(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Timestamp(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * Creates an EntityByDtoFinder for the DTO property "parent".
		 * The created object finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
		 * by DTO's of type "ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO".
		 * @return the created EntityByDtoFinder
		 */
		protected abstract ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> createEntityByDtoFinder_Parent();
		
		private ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> entityByDtoFinder_Parent;
		
		/**
		 * Getter for the previously created EntityByDtoFinder for property "parent".
		 * @return the previously created EntityByDtoFinder object 
		 */
		public final ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> getEntityByDtoFinder_Parent() {
			return this.entityByDtoFinder_Parent;
		}
		
		/**
		 * Finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
		 * by DTO's of type "ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO".
		 * It is targeted for the DTO property: parent
		 * @param parentDto 
		 *		the given dto by which the entity should be found
		 * @return the found entity
		 * @throws ir.viratech.commons.api.search.InvalidDtoException
		 * 		If the given dto is not valid or is not representing an internal entity
		 */
		public final ir.viratech.pond_ms.model.layer.ParentLayer findByDto_Parent(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentDto) throws ir.viratech.commons.api.search.InvalidDtoException {
			return this.getEntityByDtoFinder_Parent().findByDto(parentDto);
		}
		
		/**
		 * creates a DtoFieldInfo for dto-property "parent".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param fieldInfoContext the FieldInfoContext of the dto-property: parent
		 * @param entityByDtoFinder the EntityByDtoFinder for the dto-property: parent
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.DtoFieldInfo<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> createFieldInfo_Parent(
				String externalName, String internalName, String internalSearchExpression, String bundleKey, boolean searchable, 
				ir.viratech.commons.api.search.field.FieldInfoContext<ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> fieldInfoContext, 
				ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO> entityByDtoFinder) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Dto<ir.viratech.pond_ms.model.layer.ParentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO>(
						externalName, internalName, internalSearchExpression, bundleKey, searchable, fieldInfoContext, entityByDtoFinder);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "subLayers".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_SubLayers(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Name("name", "name", "name", null, "name", true, null));
			this.putFieldInfo(this.createFieldInfo_CreationDate("creationDate", "creationDate", "creationDate", null, "creationDate", true, true));
			this.entityByDtoFinder_Parent = createEntityByDtoFinder_Parent();
			this.putFieldInfo(this.createFieldInfo_Parent("parent", "parentLayer", "parentLayer", "parent", true, 
					getFieldInfoContextInstance(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO.FieldInfoContext.class), this.getEntityByDtoFinder_Parent()));
			this.putFieldInfo(this.createFieldInfo_SubLayers("subLayers", "subLayers", "subLayers", "collection", "subLayers", true, null));
		}
		
		/**
		 * Creates a DTO of type "ParentLayerFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public ParentLayerFullDTO createDto() {
			return new ParentLayerFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public ParentLayerFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(ParentLayerFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// name
	
	private String name;
	
	/**
	 * Getter for property "name".
	 *
	 * @return the value of property "name"
	 */
	@JsonProperty
	public String getName() {
		return this.name;
	}
	
	/**
	 * Setter for property "name".
	 *
	 * @param name the new value for property "name"
	 */
	public void setName(String name) {
		this.name = name;
	}
	
	/**
	/**
	 * Used for saving a given value of property name to a given internal entity.
	 * 
	 * @param parentLayer
	 * 		the given internal entity
	 * @param name 
	 * 		the value of property name which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property name is not appropriate for saving the entity
	 */
	protected void save_Name(ParentLayer parentLayer, String name)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		parentLayer.setName((String) name);
	}
	
	
	// creationDate
	
	private java.util.Date creationDate;
	
	/**
	 * Getter for property "creationDate".
	 *
	 * @return the value of property "creationDate"
	 */
	@JsonProperty
	public java.util.Date getCreationDate() {
		return this.creationDate;
	}
	
	
	// parent
	
	private ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parent;
	private boolean __modified__Parent = false;
	
	/**
	 * Getter for property "parent".
	 *
	 * @return the value of property "parent"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO getParent() {
		return this.parent;
	}
	
	/**
	 * Setter for property "parent".
	 *
	 * @param parent the new value for property "parent"
	 */
	public void setParent(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parent) {
		this.__modified__Parent = true;
		this.parent = parent;
	}
	
	/**
	 * Shows the modification state of the property "parent".
	 * 
	 * @return true if the property is modified
	 */
	public boolean hasModifiedParent() {
		return this.__modified__Parent;
	}
	
	/**
	 * Used for loading the property parent from a given internal entity.
	 * 
	 * @param parentLayer the given internal entity
	 * @return the value of property parent based on the given internal entity
	 */
	protected ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO load_Parent(ParentLayer parentLayer) {
		ir.viratech.pond_ms.model.layer.ParentLayer __internalProperty_parentLayer = parentLayer.getParentLayer();
		if (__internalProperty_parentLayer == null)
			return null; 
		ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parent = new ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO();
		parent.loadFrom(__internalProperty_parentLayer);
		return parent;
	}
	
	/**
	/**
	 * Used for saving a given value of property parent to a given internal entity.
	 * 
	 * @param parentLayer
	 * 		the given internal entity
	 * @param parentDto 
	 * 		the value of property parent which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property parent is not appropriate for saving the entity
	 */
	protected void save_Parent(ParentLayer parentLayer, ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentDto)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		ir.viratech.pond_ms.model.layer.ParentLayer __internalProperty_parentLayer = null;
		if (parentDto != null) {
			try {
				__internalProperty_parentLayer = findByDto_Parent(parentDto);
			} catch (ir.viratech.commons.api.search.InvalidDtoException e) {
				throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("The given dto is invalid: "+parentDto, e);
			}
			if (__internalProperty_parentLayer == null)
				throw new ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException("No entity was found for the given dto: "+parentDto);
		}
		parentLayer.setParentLayer(__internalProperty_parentLayer);
	}
	
	/**
	 * Finds entities based on the DTO property "parent".
	 * It finds entities of type "ir.viratech.pond_ms.model.layer.ParentLayer" 
	 * based on DTO's of type "ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO",
	 * targeted on the DTO property "parent".
	 * 
	 * @param parentDto 
	 *		the given dto by which the entity should be found
	 * @return the found entity
	 * @throws ir.viratech.commons.api.search.InvalidDtoException
	 * 		If the given dto is not valid or is not representing an internal entity  
	 */
	protected ir.viratech.pond_ms.model.layer.ParentLayer findByDto_Parent(ir.viratech.pond_ms.api.layer.dto.ParentLayerLightDTO parentDto) throws ir.viratech.commons.api.search.InvalidDtoException {
		return this.getFieldInfoContext().findByDto_Parent(parentDto);
	}
	
	
	// subLayers
	
	private ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> subLayers;
	
	/**
	 * Getter for property "subLayers".
	 *
	 * @return the value of property "subLayers"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> getSubLayers() {
		return this.subLayers;
	}
	
	/**
	 * Setter for property "subLayers".
	 *
	 * @param subLayers the new value for property "subLayers"
	 */
	public void setSubLayers(ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> subLayers) {
		this.subLayers = subLayers;
	}
	
	/**
	 * Used for loading the property subLayers from a given internal entity.
	 * 
	 * @param parentLayer the given internal entity
	 * @return the value of property subLayers based on the given internal entity
	 */
	protected abstract ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> load_SubLayers(ParentLayer parentLayer);
	
	/**
	/**
	 * Used for saving a given value of property subLayers to a given internal entity.
	 * 
	 * @param parentLayer
	 * 		the given internal entity
	 * @param subLayers 
	 * 		the value of property subLayers which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property subLayers is not appropriate for saving the entity
	 */
	protected abstract void save_SubLayers(ParentLayer parentLayer, ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> subLayers)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "ParentLayer".
	 * 
	 * @param parentLayer the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(ParentLayer parentLayer) {
		this.uid = parentLayer.getExtuid();
		this.name = parentLayer.getName();
		this.creationDate = parentLayer.getCreationDate();
		this.parent = this.load_Parent(parentLayer);
		this.subLayers = this.load_SubLayers(parentLayer);
	}
	
	/**
	 * Saves this DTO to an entity object of type "ParentLayer".
	 * 
	 * @param parentLayer the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(ParentLayer parentLayer) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		this.save_Name(parentLayer, this.name);
		//Disabled save for property: creationDate
		if (this.hasModifiedParent()) {
			this.save_Parent(parentLayer, this.parent);
		}
		this.save_SubLayers(parentLayer, this.subLayers);
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("name", this.name);
		data.put("creationDate", this.creationDate);
		data.put("parent", this.parent);
		data.put("subLayers", this.subLayers);
		return data;
	}
	
}
