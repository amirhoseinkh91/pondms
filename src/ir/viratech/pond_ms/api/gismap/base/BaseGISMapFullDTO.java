package ir.viratech.pond_ms.api.gismap.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.gismap.dto.GISMapFullDTO;
import ir.viratech.pond_ms.model.gismap.GISMap;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "GISMap".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseGISMapFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<GISMap> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "GISMapFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<GISMapFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "title".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Title(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "latinTitle".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_LatinTitle(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "description".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Description(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "creationDate".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_CreationDate(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Timestamp(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "minZoom".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_MinZoom(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Integer(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "maxZoom".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_MaxZoom(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Integer(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "defaultZoom".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_DefaultZoom(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Integer(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "boundingBox".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_BoundingBox(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "center".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Center(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "childCount".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_ChildCount(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Integer(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * Creates an EntityByDtoFinder for the DTO property "organization".
		 * The created object finds entities of type "ir.viratech.pond_ms.model.organization.Organization" 
		 * by DTO's of type "ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO".
		 * @return the created EntityByDtoFinder
		 */
		protected abstract ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.organization.Organization, ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO> createEntityByDtoFinder_Organization();
		
		private ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.organization.Organization, ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO> entityByDtoFinder_Organization;
		
		/**
		 * Getter for the previously created EntityByDtoFinder for property "organization".
		 * @return the previously created EntityByDtoFinder object 
		 */
		public final ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.organization.Organization, ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO> getEntityByDtoFinder_Organization() {
			return this.entityByDtoFinder_Organization;
		}
		
		/**
		 * Finds entities of type "ir.viratech.pond_ms.model.organization.Organization" 
		 * by DTO's of type "ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO".
		 * It is targeted for the DTO property: organization
		 * @param organizationDto 
		 *		the given dto by which the entity should be found
		 * @return the found entity
		 * @throws ir.viratech.commons.api.search.InvalidDtoException
		 * 		If the given dto is not valid or is not representing an internal entity
		 */
		public final ir.viratech.pond_ms.model.organization.Organization findByDto_Organization(ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO organizationDto) throws ir.viratech.commons.api.search.InvalidDtoException {
			return this.getEntityByDtoFinder_Organization().findByDto(organizationDto);
		}
		
		/**
		 * creates a DtoFieldInfo for dto-property "organization".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param fieldInfoContext the FieldInfoContext of the dto-property: organization
		 * @param entityByDtoFinder the EntityByDtoFinder for the dto-property: organization
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.DtoFieldInfo<ir.viratech.pond_ms.model.organization.Organization, ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO> createFieldInfo_Organization(
				String externalName, String internalName, String internalSearchExpression, String bundleKey, boolean searchable, 
				ir.viratech.commons.api.search.field.FieldInfoContext<ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO> fieldInfoContext, 
				ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.organization.Organization, ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO> entityByDtoFinder) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Dto<ir.viratech.pond_ms.model.organization.Organization, ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO>(
						externalName, internalName, internalSearchExpression, bundleKey, searchable, fieldInfoContext, entityByDtoFinder);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "subLayers".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_SubLayers(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Title("title", "title", "title", null, "title", true, null));
			this.putFieldInfo(this.createFieldInfo_LatinTitle("latinTitle", "latinTitle", "latinTitle", null, "latinTitle", true, null));
			this.putFieldInfo(this.createFieldInfo_Description("description", "description", "description", null, "description", true, null));
			this.putFieldInfo(this.createFieldInfo_CreationDate("creationDate", "creationDate", "creationDate", null, "creationDate", true, true));
			this.putFieldInfo(this.createFieldInfo_MinZoom("minZoom", "minZoom", "minZoom", null, "minZoom", true, null));
			this.putFieldInfo(this.createFieldInfo_MaxZoom("maxZoom", "maxZoom", "maxZoom", null, "maxZoom", true, null));
			this.putFieldInfo(this.createFieldInfo_DefaultZoom("defaultZoom", "defaultZoom", "defaultZoom", null, "defaultZoom", true, null));
			this.putFieldInfo(this.createFieldInfo_BoundingBox("boundingBox", "boundingBox", "boundingBox", "string", "boundingBox", true, null));
			this.putFieldInfo(this.createFieldInfo_Center("center", "center", "center", "string", "center", true, null));
			this.putFieldInfo(this.createFieldInfo_ChildCount("childCount", "childCount", "childCount", null, "childCount", true, null));
			this.entityByDtoFinder_Organization = createEntityByDtoFinder_Organization();
			this.putFieldInfo(this.createFieldInfo_Organization("organization", "organization", "organization", "organization", true, 
					getFieldInfoContextInstance(ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO.FieldInfoContext.class), this.getEntityByDtoFinder_Organization()));
			this.putFieldInfo(this.createFieldInfo_SubLayers("subLayers", "subLayers", "subLayers", "collection", "subLayers", true, null));
		}
		
		/**
		 * Creates a DTO of type "GISMapFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public GISMapFullDTO createDto() {
			return new GISMapFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public GISMapFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(GISMapFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// title
	
	private String title;
	
	/**
	 * Getter for property "title".
	 *
	 * @return the value of property "title"
	 */
	@JsonProperty
	public String getTitle() {
		return this.title;
	}
	
	/**
	 * Setter for property "title".
	 *
	 * @param title the new value for property "title"
	 */
	public void setTitle(String title) {
		this.title = title;
	}
	
	/**
	/**
	 * Used for saving a given value of property title to a given internal entity.
	 * 
	 * @param gISMap
	 * 		the given internal entity
	 * @param title 
	 * 		the value of property title which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property title is not appropriate for saving the entity
	 */
	protected void save_Title(GISMap gISMap, String title)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		gISMap.setTitle((String) title);
	}
	
	
	// latinTitle
	
	private String latinTitle;
	
	/**
	 * Getter for property "latinTitle".
	 *
	 * @return the value of property "latinTitle"
	 */
	@JsonProperty
	public String getLatinTitle() {
		return this.latinTitle;
	}
	
	/**
	 * Setter for property "latinTitle".
	 *
	 * @param latinTitle the new value for property "latinTitle"
	 */
	public void setLatinTitle(String latinTitle) {
		this.latinTitle = latinTitle;
	}
	
	
	// description
	
	private String description;
	
	/**
	 * Getter for property "description".
	 *
	 * @return the value of property "description"
	 */
	@JsonProperty
	public String getDescription() {
		return this.description;
	}
	
	/**
	 * Setter for property "description".
	 *
	 * @param description the new value for property "description"
	 */
	public void setDescription(String description) {
		this.description = description;
	}
	
	
	// creationDate
	
	private java.util.Date creationDate;
	
	/**
	 * Getter for property "creationDate".
	 *
	 * @return the value of property "creationDate"
	 */
	@JsonProperty
	public java.util.Date getCreationDate() {
		return this.creationDate;
	}
	
	
	// minZoom
	
	private int minZoom;
	
	/**
	 * Getter for property "minZoom".
	 *
	 * @return the value of property "minZoom"
	 */
	@JsonProperty
	public int getMinZoom() {
		return this.minZoom;
	}
	
	/**
	 * Setter for property "minZoom".
	 *
	 * @param minZoom the new value for property "minZoom"
	 */
	public void setMinZoom(int minZoom) {
		this.minZoom = minZoom;
	}
	
	
	// maxZoom
	
	private int maxZoom;
	
	/**
	 * Getter for property "maxZoom".
	 *
	 * @return the value of property "maxZoom"
	 */
	@JsonProperty
	public int getMaxZoom() {
		return this.maxZoom;
	}
	
	/**
	 * Setter for property "maxZoom".
	 *
	 * @param maxZoom the new value for property "maxZoom"
	 */
	public void setMaxZoom(int maxZoom) {
		this.maxZoom = maxZoom;
	}
	
	
	// defaultZoom
	
	private int defaultZoom;
	
	/**
	 * Getter for property "defaultZoom".
	 *
	 * @return the value of property "defaultZoom"
	 */
	@JsonProperty
	public int getDefaultZoom() {
		return this.defaultZoom;
	}
	
	/**
	 * Setter for property "defaultZoom".
	 *
	 * @param defaultZoom the new value for property "defaultZoom"
	 */
	public void setDefaultZoom(int defaultZoom) {
		this.defaultZoom = defaultZoom;
	}
	
	
	// boundingBox
	
	private ir.viratech.pond_ms.commons.geo.Polygon boundingBox;
	
	/**
	 * Getter for property "boundingBox".
	 *
	 * @return the value of property "boundingBox"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.commons.geo.Polygon getBoundingBox() {
		return this.boundingBox;
	}
	
	/**
	 * Setter for property "boundingBox".
	 *
	 * @param boundingBox the new value for property "boundingBox"
	 */
	public void setBoundingBox(ir.viratech.pond_ms.commons.geo.Polygon boundingBox) {
		this.boundingBox = boundingBox;
	}
	
	/**
	 * Used for loading the property boundingBox from a given internal entity.
	 * 
	 * @param gISMap the given internal entity
	 * @return the value of property boundingBox based on the given internal entity
	 */
	protected abstract ir.viratech.pond_ms.commons.geo.Polygon load_BoundingBox(GISMap gISMap);
	
	/**
	/**
	 * Used for saving a given value of property boundingBox to a given internal entity.
	 * 
	 * @param gISMap
	 * 		the given internal entity
	 * @param boundingBox 
	 * 		the value of property boundingBox which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property boundingBox is not appropriate for saving the entity
	 */
	protected abstract void save_BoundingBox(GISMap gISMap, ir.viratech.pond_ms.commons.geo.Polygon boundingBox)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	
	// center
	
	private ir.viratech.pond_ms.commons.geo.Point center;
	
	/**
	 * Getter for property "center".
	 *
	 * @return the value of property "center"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.commons.geo.Point getCenter() {
		return this.center;
	}
	
	/**
	 * Setter for property "center".
	 *
	 * @param center the new value for property "center"
	 */
	public void setCenter(ir.viratech.pond_ms.commons.geo.Point center) {
		this.center = center;
	}
	
	/**
	 * Used for loading the property center from a given internal entity.
	 * 
	 * @param gISMap the given internal entity
	 * @return the value of property center based on the given internal entity
	 */
	protected abstract ir.viratech.pond_ms.commons.geo.Point load_Center(GISMap gISMap);
	
	/**
	/**
	 * Used for saving a given value of property center to a given internal entity.
	 * 
	 * @param gISMap
	 * 		the given internal entity
	 * @param center 
	 * 		the value of property center which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property center is not appropriate for saving the entity
	 */
	protected abstract void save_Center(GISMap gISMap, ir.viratech.pond_ms.commons.geo.Point center)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	
	// childCount
	
	private int childCount;
	
	/**
	 * Getter for property "childCount".
	 *
	 * @return the value of property "childCount"
	 */
	@JsonProperty
	public int getChildCount() {
		return this.childCount;
	}
	
	/**
	 * Used for loading the property childCount from a given internal entity.
	 * 
	 * @param gISMap the given internal entity
	 * @return the value of property childCount based on the given internal entity
	 */
	protected abstract int load_ChildCount(GISMap gISMap);
	
	
	// organization
	
	private ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO organization;
	private boolean __modified__Organization = false;
	
	/**
	 * Getter for property "organization".
	 *
	 * @return the value of property "organization"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO getOrganization() {
		return this.organization;
	}
	
	/**
	 * Shows the modification state of the property "organization".
	 * 
	 * @return true if the property is modified
	 */
	public boolean hasModifiedOrganization() {
		return this.__modified__Organization;
	}
	
	/**
	 * Used for loading the property organization from a given internal entity.
	 * 
	 * @param gISMap the given internal entity
	 * @return the value of property organization based on the given internal entity
	 */
	protected ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO load_Organization(GISMap gISMap) {
		ir.viratech.pond_ms.model.organization.Organization __internalProperty_organization = gISMap.getOrganization();
		if (__internalProperty_organization == null)
			return null; 
		ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO organization = new ir.viratech.pond_ms.api.organization.dto.OrganizationFullDTO();
		organization.loadFrom(__internalProperty_organization);
		return organization;
	}
	
	
	// subLayers
	
	private ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> subLayers;
	
	/**
	 * Getter for property "subLayers".
	 *
	 * @return the value of property "subLayers"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> getSubLayers() {
		return this.subLayers;
	}
	
	/**
	 * Setter for property "subLayers".
	 *
	 * @param subLayers the new value for property "subLayers"
	 */
	public void setSubLayers(ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> subLayers) {
		this.subLayers = subLayers;
	}
	
	/**
	 * Used for loading the property subLayers from a given internal entity.
	 * 
	 * @param gISMap the given internal entity
	 * @return the value of property subLayers based on the given internal entity
	 */
	protected abstract ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> load_SubLayers(GISMap gISMap);
	
	/**
	/**
	 * Used for saving a given value of property subLayers to a given internal entity.
	 * 
	 * @param gISMap
	 * 		the given internal entity
	 * @param subLayers 
	 * 		the value of property subLayers which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property subLayers is not appropriate for saving the entity
	 */
	protected abstract void save_SubLayers(GISMap gISMap, ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.layer.Layer, ir.viratech.pond_ms.api.layer.dto.LayerLightDTO> subLayers)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "GISMap".
	 * 
	 * @param gISMap the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(GISMap gISMap) {
		this.uid = gISMap.getExtuid();
		this.title = gISMap.getTitle();
		this.latinTitle = gISMap.getLatinTitle();
		this.description = gISMap.getDescription();
		this.creationDate = gISMap.getCreationDate();
		this.minZoom = gISMap.getMinZoom();
		this.maxZoom = gISMap.getMaxZoom();
		this.defaultZoom = gISMap.getDefaultZoom();
		this.boundingBox = this.load_BoundingBox(gISMap);
		this.center = this.load_Center(gISMap);
		this.childCount = this.load_ChildCount(gISMap);
		this.organization = this.load_Organization(gISMap);
		this.subLayers = this.load_SubLayers(gISMap);
	}
	
	/**
	 * Saves this DTO to an entity object of type "GISMap".
	 * 
	 * @param gISMap the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(GISMap gISMap) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		this.save_Title(gISMap, this.title);
		gISMap.setLatinTitle(this.latinTitle);
		gISMap.setDescription(this.description);
		//Disabled save for property: creationDate
		gISMap.setMinZoom(this.minZoom);
		gISMap.setMaxZoom(this.maxZoom);
		gISMap.setDefaultZoom(this.defaultZoom);
		this.save_BoundingBox(gISMap, this.boundingBox);
		this.save_Center(gISMap, this.center);
		//Disabled save for property: childCount
		//Disabled save for property: organization
		this.save_SubLayers(gISMap, this.subLayers);
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("title", this.title);
		data.put("latinTitle", this.latinTitle);
		data.put("description", this.description);
		data.put("creationDate", this.creationDate);
		data.put("minZoom", this.minZoom);
		data.put("maxZoom", this.maxZoom);
		data.put("defaultZoom", this.defaultZoom);
		data.put("boundingBox", this.boundingBox);
		data.put("center", this.center);
		data.put("childCount", this.childCount);
		data.put("organization", this.organization);
		data.put("subLayers", this.subLayers);
		return data;
	}
	
}
