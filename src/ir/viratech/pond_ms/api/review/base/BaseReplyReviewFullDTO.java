package ir.viratech.pond_ms.api.review.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.review.dto.ReplyReviewFullDTO;
import ir.viratech.pond_ms.model.review.ReplyReview;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "ReplyReview".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseReplyReviewFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<ReplyReview> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "ReplyReviewFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<ReplyReviewFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "position".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Position(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "text".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Text(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "creationDate".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_CreationDate(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Timestamp(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "confirmed".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Confirmed(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Boolean(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Position("position", "position", "position", null, "position", true, null));
			this.putFieldInfo(this.createFieldInfo_Text("text", "text", "text", null, "text", true, null));
			this.putFieldInfo(this.createFieldInfo_CreationDate("creationDate", "creationDate", "creationDate", null, "creationDate", true, null));
			this.putFieldInfo(this.createFieldInfo_Confirmed("confirmed", "confirmed", "confirmed", null, "confirmed", true, null));
		}
		
		/**
		 * Creates a DTO of type "ReplyReviewFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public ReplyReviewFullDTO createDto() {
			return new ReplyReviewFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public ReplyReviewFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(ReplyReviewFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// position
	
	private String position;
	
	/**
	 * Getter for property "position".
	 *
	 * @return the value of property "position"
	 */
	@JsonProperty
	public String getPosition() {
		return this.position;
	}
	
	/**
	 * Setter for property "position".
	 *
	 * @param position the new value for property "position"
	 */
	public void setPosition(String position) {
		this.position = position;
	}
	
	
	// text
	
	private String text;
	
	/**
	 * Getter for property "text".
	 *
	 * @return the value of property "text"
	 */
	@JsonProperty
	public String getText() {
		return this.text;
	}
	
	/**
	 * Setter for property "text".
	 *
	 * @param text the new value for property "text"
	 */
	public void setText(String text) {
		this.text = text;
	}
	
	
	// creationDate
	
	private java.util.Date creationDate;
	
	/**
	 * Getter for property "creationDate".
	 *
	 * @return the value of property "creationDate"
	 */
	@JsonProperty
	public java.util.Date getCreationDate() {
		return this.creationDate;
	}
	
	
	// confirmed
	
	private boolean confirmed;
	
	/**
	 * Getter for property "confirmed".
	 *
	 * @return the value of property "confirmed"
	 */
	@JsonProperty
	public boolean isConfirmed() {
		return this.confirmed;
	}
	
	/**
	 * Setter for property "confirmed".
	 *
	 * @param confirmed the new value for property "confirmed"
	 */
	public void setConfirmed(boolean confirmed) {
		this.confirmed = confirmed;
	}
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "ReplyReview".
	 * 
	 * @param replyReview the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(ReplyReview replyReview) {
		this.uid = replyReview.getExtuid();
		this.position = replyReview.getPosition();
		this.text = replyReview.getText();
		this.creationDate = replyReview.getCreationDate();
		this.confirmed = replyReview.isConfirmed();
	}
	
	/**
	 * Saves this DTO to an entity object of type "ReplyReview".
	 * 
	 * @param replyReview the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(ReplyReview replyReview) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		replyReview.setPosition(this.position);
		replyReview.setText(this.text);
		//Disabled save for property: creationDate
		replyReview.setConfirmed(this.confirmed);
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("position", this.position);
		data.put("text", this.text);
		data.put("creationDate", this.creationDate);
		data.put("confirmed", this.confirmed);
		return data;
	}
	
}
