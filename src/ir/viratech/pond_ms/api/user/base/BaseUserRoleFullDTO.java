package ir.viratech.pond_ms.api.user.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.user.dto.UserRoleFullDTO;
import ir.viratech.pond_ms.model.user.role.UserRole;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "UserRole".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseUserRoleFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<UserRole> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "UserRoleFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<UserRoleFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "name".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Name(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "description".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Description(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "features".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Features(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, null));
			this.putFieldInfo(this.createFieldInfo_Name("name", "name", "name", null, "name", true, null));
			this.putFieldInfo(this.createFieldInfo_Description("description", "description", "description", null, "description", true, null));
			this.putFieldInfo(this.createFieldInfo_Features("features", "featuresRelationMap", "featuresRelationMap", "collection", "features", false, null));
		}
		
		/**
		 * Creates a DTO of type "UserRoleFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public UserRoleFullDTO createDto() {
			return new UserRoleFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public UserRoleFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(UserRoleFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// name
	
	private String name;
	
	/**
	 * Getter for property "name".
	 *
	 * @return the value of property "name"
	 */
	@JsonProperty
	public String getName() {
		return this.name;
	}
	
	/**
	 * Setter for property "name".
	 *
	 * @param name the new value for property "name"
	 */
	public void setName(String name) {
		this.name = name;
	}
	
	
	// description
	
	private String description;
	
	/**
	 * Getter for property "description".
	 *
	 * @return the value of property "description"
	 */
	@JsonProperty
	public String getDescription() {
		return this.description;
	}
	
	/**
	 * Setter for property "description".
	 *
	 * @param description the new value for property "description"
	 */
	public void setDescription(String description) {
		this.description = description;
	}
	
	
	// features
	
	private ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature> features;
	
	/**
	 * Getter for property "features".
	 *
	 * @return the value of property "features"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature> getFeatures() {
		return this.features;
	}
	
	/**
	 * Setter for property "features".
	 *
	 * @param features the new value for property "features"
	 */
	public void setFeatures(ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature> features) {
		this.features = features;
	}
	
	/**
	 * Used for loading the property features from a given internal entity.
	 * 
	 * @param userRole the given internal entity
	 * @return the value of property features based on the given internal entity
	 */
	protected ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature> load_Features(UserRole userRole) {
		ir.viratech.commons.util.relation_map.RelationMap<ir.viratech.pond_ms.model.user.Feature> __internalProperty_featuresRelationMap = userRole.getFeaturesRelationMap();
		if (__internalProperty_featuresRelationMap == null)
			return null; 
		ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature> features = new ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature>();
		features.loadFrom(__internalProperty_featuresRelationMap);
		return features;
	}
	
	/**
	/**
	 * Used for saving a given value of property features to a given internal entity.
	 * 
	 * @param userRole
	 * 		the given internal entity
	 * @param features 
	 * 		the value of property features which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property features is not appropriate for saving the entity
	 */
	protected void save_Features(UserRole userRole, ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.Feature> features)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		if (features == null) {
			//Ignored
		} else {
			features.saveTo(userRole.getFeaturesRelationMap());
		}
	}
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "UserRole".
	 * 
	 * @param userRole the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(UserRole userRole) {
		this.uid = userRole.getExtuid();
		this.name = userRole.getName();
		this.description = userRole.getDescription();
		this.features = this.load_Features(userRole);
	}
	
	/**
	 * Saves this DTO to an entity object of type "UserRole".
	 * 
	 * @param userRole the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(UserRole userRole) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		userRole.setName(this.name);
		userRole.setDescription(this.description);
		this.save_Features(userRole, this.features);
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("name", this.name);
		data.put("description", this.description);
		data.put("features", this.features);
		return data;
	}
	
}
