package ir.viratech.pond_ms.api.user.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.user.dto.UserFullDTO;
import ir.viratech.pond_ms.model.user.User;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "User".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseUserFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<User> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "UserFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<UserFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "username".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Username(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "enabled".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Enabled(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Boolean(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "firstName".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected abstract ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_FirstName(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable);
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "lastName".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_LastName(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "fullName".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_FullName(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "roles".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Roles(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", false, false));
			this.putFieldInfo(this.createFieldInfo_Username("username", "username", "authUser.username", null, "username", true, null));
			//Disabled fieldInfo for property: password
			this.putFieldInfo(this.createFieldInfo_Enabled("enabled", "enabled", "authUser.enabled", null, "enabled", true, null));
			this.putFieldInfo(this.createFieldInfo_FirstName("firstName", "firstName", "authUser.firstName", null, "firstName", true, null));
			this.putFieldInfo(this.createFieldInfo_LastName("lastName", "lastName", "authUser.lastName", null, "lastName", true, null));
			this.putFieldInfo(this.createFieldInfo_FullName("fullName", "fullName", "fullName", null, "fullName", true, true));
			this.putFieldInfo(this.createFieldInfo_Roles("roles", "rolesRelationMap", "rolesRelationMap", "collection", "roles", false, null));
		}
		
		/**
		 * Creates a DTO of type "UserFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public UserFullDTO createDto() {
			return new UserFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public UserFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(UserFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// username
	
	private String username;
	private boolean __modified__Username = false;
	
	/**
	 * Getter for property "username".
	 *
	 * @return the value of property "username"
	 */
	@JsonProperty
	public String getUsername() {
		return this.username;
	}
	
	/**
	 * Setter for property "username".
	 *
	 * @param username the new value for property "username"
	 */
	public void setUsername(String username) {
		this.__modified__Username = true;
		this.username = username;
	}
	
	/**
	 * Shows the modification state of the property "username".
	 * 
	 * @return true if the property is modified
	 */
	public boolean hasModifiedUsername() {
		return this.__modified__Username;
	}
	
	/**
	/**
	 * Used for saving a given value of property username to a given internal entity.
	 * 
	 * @param user
	 * 		the given internal entity
	 * @param username 
	 * 		the value of property username which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property username is not appropriate for saving the entity
	 */
	protected void save_Username(User user, String username)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		user.setUsername((String) username);
	}
	
	
	// password
	
	private String password;
	private boolean __modified__Password = false;
	
	/**
	 * Setter for property "password".
	 *
	 * @param password the new value for property "password"
	 */
	@JsonProperty
	public void setPassword(String password) {
		this.__modified__Password = true;
		this.password = password;
	}
	
	/**
	 * Shows the modification state of the property "password".
	 * 
	 * @return true if the property is modified
	 */
	public boolean hasModifiedPassword() {
		return this.__modified__Password;
	}
	
	/**
	/**
	 * Used for saving a given value of property password to a given internal entity.
	 * 
	 * @param user
	 * 		the given internal entity
	 * @param password 
	 * 		the value of property password which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property password is not appropriate for saving the entity
	 */
	protected abstract void save_Password(User user, String password)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	/**
	 * Used for converting a given value of property password to a developer-friendly String.
	 * @param password the given value of property password
	 * @return the developer-friendly String representation of password
	 */
	protected abstract String toString_Password(String password);
	
	
	// enabled
	
	private boolean enabled;
	
	/**
	 * Getter for property "enabled".
	 *
	 * @return the value of property "enabled"
	 */
	@JsonProperty
	public boolean isEnabled() {
		return this.enabled;
	}
	
	/**
	 * Setter for property "enabled".
	 *
	 * @param enabled the new value for property "enabled"
	 */
	public void setEnabled(boolean enabled) {
		this.enabled = enabled;
	}
	
	/**
	/**
	 * Used for saving a given value of property enabled to a given internal entity.
	 * 
	 * @param user
	 * 		the given internal entity
	 * @param enabled 
	 * 		the value of property enabled which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property enabled is not appropriate for saving the entity
	 */
	protected void save_Enabled(User user, boolean enabled)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		user.setEnabled((boolean) enabled);
	}
	
	
	// firstName
	
	private String firstName;
	
	/**
	 * Getter for property "firstName".
	 *
	 * @return the value of property "firstName"
	 */
	@JsonProperty
	public String getFirstName() {
		return this.firstName;
	}
	
	/**
	 * Setter for property "firstName".
	 *
	 * @param firstName the new value for property "firstName"
	 */
	public void setFirstName(String firstName) {
		this.firstName = firstName;
	}
	
	
	// lastName
	
	private String lastName;
	
	/**
	 * Getter for property "lastName".
	 *
	 * @return the value of property "lastName"
	 */
	@JsonProperty
	public String getLastName() {
		return this.lastName;
	}
	
	/**
	 * Setter for property "lastName".
	 *
	 * @param lastName the new value for property "lastName"
	 */
	public void setLastName(String lastName) {
		this.lastName = lastName;
	}
	
	/**
	 * Used for loading the property lastName from a given internal entity.
	 * 
	 * @param user the given internal entity
	 * @return the value of property lastName based on the given internal entity
	 */
	protected String load_LastName(User user) {
		return (String) (user.getLastName());
	}
	
	/**
	 * Used for converting a given value of property lastName to a developer-friendly String.
	 * @param lastName the given value of property lastName
	 * @return the developer-friendly String representation of lastName
	 */
	protected String toString_LastName(String lastName) {
		return lastName;
	}
	
	
	// fullName
	
	private String fullName;
	
	/**
	 * Getter for property "fullName".
	 *
	 * @return the value of property "fullName"
	 */
	@JsonProperty
	public String getFullName() {
		return this.fullName;
	}
	
	
	// roles
	
	private ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole> roles;
	
	/**
	 * Getter for property "roles".
	 *
	 * @return the value of property "roles"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole> getRoles() {
		return this.roles;
	}
	
	/**
	 * Setter for property "roles".
	 *
	 * @param roles the new value for property "roles"
	 */
	public void setRoles(ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole> roles) {
		this.roles = roles;
	}
	
	/**
	 * Used for loading the property roles from a given internal entity.
	 * 
	 * @param user the given internal entity
	 * @return the value of property roles based on the given internal entity
	 */
	protected ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole> load_Roles(User user) {
		ir.viratech.commons.util.relation_map.RelationMap<ir.viratech.pond_ms.model.user.role.UserRole> __internalProperty_rolesRelationMap = user.getRolesRelationMap();
		if (__internalProperty_rolesRelationMap == null)
			return null; 
		ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole> roles = new ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole>();
		roles.loadFrom(__internalProperty_rolesRelationMap);
		return roles;
	}
	
	/**
	/**
	 * Used for saving a given value of property roles to a given internal entity.
	 * 
	 * @param user
	 * 		the given internal entity
	 * @param roles 
	 * 		the value of property roles which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property roles is not appropriate for saving the entity
	 */
	protected void save_Roles(User user, ir.viratech.commons.api.dto.relation_map.DisplableRelationMapDTO<ir.viratech.pond_ms.model.user.role.UserRole> roles)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		if (roles == null) {
			//Ignored
		} else {
			roles.saveTo(user.getRolesRelationMap());
		}
	}
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "User".
	 * 
	 * @param user the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(User user) {
		this.uid = user.getExtuid();
		this.username = user.getUsername();
		//Disabled load for property: password
		this.enabled = user.isEnabled();
		this.firstName = user.getFirstName();
		this.lastName = this.load_LastName(user);
		this.fullName = user.getFullName();
		this.roles = this.load_Roles(user);
	}
	
	/**
	 * Saves this DTO to an entity object of type "User".
	 * 
	 * @param user the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(User user) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		if (this.hasModifiedUsername()) {
			this.save_Username(user, this.username);
		}
		if (this.hasModifiedPassword()) {
			this.save_Password(user, this.password);
		}
		this.save_Enabled(user, this.enabled);
		user.setFirstName(this.firstName);
		user.setLastName(this.lastName);
		//Disabled save for property: fullName
		this.save_Roles(user, this.roles);
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("username", this.username);
		data.put("password", this.toString_Password(this.password));
		data.put("enabled", this.enabled);
		//Disabled toString for property: firstName
		data.put("lastName", this.toString_LastName(this.lastName));
		data.put("fullName", this.fullName);
		data.put("roles", this.roles);
		return data;
	}
	
}
