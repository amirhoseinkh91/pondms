package ir.viratech.pond_ms.api.feed_back.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.feed_back.dto.FeedBackFullDTO;
import ir.viratech.pond_ms.model.feed_back.FeedBack;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "FeedBack".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseFeedBackFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<FeedBack> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "FeedBackFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<FeedBackFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "title".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Title(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "email".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Email(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "comment".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Comment(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "date".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Date(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Timestamp(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Title("title", "title", "title", null, "title", true, null));
			this.putFieldInfo(this.createFieldInfo_Email("email", "email", "email", null, "email", true, null));
			this.putFieldInfo(this.createFieldInfo_Comment("comment", "comment", "comment", null, "comment", true, null));
			this.putFieldInfo(this.createFieldInfo_Date("date", "date", "date", null, "date", true, null));
		}
		
		/**
		 * Creates a DTO of type "FeedBackFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public FeedBackFullDTO createDto() {
			return new FeedBackFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public FeedBackFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(FeedBackFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// title
	
	private String title;
	
	/**
	 * Getter for property "title".
	 *
	 * @return the value of property "title"
	 */
	@JsonProperty
	public String getTitle() {
		return this.title;
	}
	
	/**
	 * Setter for property "title".
	 *
	 * @param title the new value for property "title"
	 */
	public void setTitle(String title) {
		this.title = title;
	}
	
	/**
	/**
	 * Used for saving a given value of property title to a given internal entity.
	 * 
	 * @param feedBack
	 * 		the given internal entity
	 * @param title 
	 * 		the value of property title which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property title is not appropriate for saving the entity
	 */
	protected void save_Title(FeedBack feedBack, String title)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		feedBack.setTitle((String) title);
	}
	
	
	// email
	
	private String email;
	
	/**
	 * Getter for property "email".
	 *
	 * @return the value of property "email"
	 */
	@JsonProperty
	public String getEmail() {
		return this.email;
	}
	
	/**
	 * Setter for property "email".
	 *
	 * @param email the new value for property "email"
	 */
	public void setEmail(String email) {
		this.email = email;
	}
	
	/**
	/**
	 * Used for saving a given value of property email to a given internal entity.
	 * 
	 * @param feedBack
	 * 		the given internal entity
	 * @param email 
	 * 		the value of property email which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property email is not appropriate for saving the entity
	 */
	protected void save_Email(FeedBack feedBack, String email)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		feedBack.setEmail((String) email);
	}
	
	
	// comment
	
	private String comment;
	
	/**
	 * Getter for property "comment".
	 *
	 * @return the value of property "comment"
	 */
	@JsonProperty
	public String getComment() {
		return this.comment;
	}
	
	/**
	 * Setter for property "comment".
	 *
	 * @param comment the new value for property "comment"
	 */
	public void setComment(String comment) {
		this.comment = comment;
	}
	
	/**
	/**
	 * Used for saving a given value of property comment to a given internal entity.
	 * 
	 * @param feedBack
	 * 		the given internal entity
	 * @param comment 
	 * 		the value of property comment which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property comment is not appropriate for saving the entity
	 */
	protected void save_Comment(FeedBack feedBack, String comment)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		feedBack.setComment((String) comment);
	}
	
	
	// date
	
	private java.util.Date date;
	
	/**
	 * Getter for property "date".
	 *
	 * @return the value of property "date"
	 */
	@JsonProperty
	public java.util.Date getDate() {
		return this.date;
	}
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "FeedBack".
	 * 
	 * @param feedBack the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(FeedBack feedBack) {
		this.uid = feedBack.getExtuid();
		this.title = feedBack.getTitle();
		this.email = feedBack.getEmail();
		this.comment = feedBack.getComment();
		this.date = feedBack.getDate();
	}
	
	/**
	 * Saves this DTO to an entity object of type "FeedBack".
	 * 
	 * @param feedBack the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(FeedBack feedBack) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		this.save_Title(feedBack, this.title);
		this.save_Email(feedBack, this.email);
		this.save_Comment(feedBack, this.comment);
		//Disabled save for property: date
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("title", this.title);
		data.put("email", this.email);
		data.put("comment", this.comment);
		data.put("date", this.date);
		return data;
	}
	
}
