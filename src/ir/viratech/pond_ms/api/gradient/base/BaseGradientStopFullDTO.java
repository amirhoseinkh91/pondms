package ir.viratech.pond_ms.api.gradient.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.gradient.dto.GradientStopFullDTO;
import ir.viratech.pond_ms.model.gradient.GradientStop;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "GradientStop".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseGradientStopFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<GradientStop> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "GradientStopFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<GradientStopFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "red".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Red(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Double(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "green".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Green(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Double(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "blue".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Blue(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Double(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			//Disabled fieldInfo for property: offset
			this.putFieldInfo(this.createFieldInfo_Red("red", "red", "red", null, "red", true, null));
			this.putFieldInfo(this.createFieldInfo_Green("green", "green", "green", null, "green", true, null));
			this.putFieldInfo(this.createFieldInfo_Blue("blue", "blue", "blue", null, "blue", true, null));
		}
		
		/**
		 * Creates a DTO of type "GradientStopFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public GradientStopFullDTO createDto() {
			return new GradientStopFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public GradientStopFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(GradientStopFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// offset
	
	private double offset;
	
	/**
	 * Setter for property "offset".
	 *
	 * @param offset the new value for property "offset"
	 */
	@JsonProperty
	public void setOffset(double offset) {
		this.offset = offset;
	}
	
	
	// red
	
	private double red;
	
	/**
	 * Getter for property "red".
	 *
	 * @return the value of property "red"
	 */
	@JsonProperty
	public double getRed() {
		return this.red;
	}
	
	
	// green
	
	private double green;
	
	/**
	 * Getter for property "green".
	 *
	 * @return the value of property "green"
	 */
	@JsonProperty
	public double getGreen() {
		return this.green;
	}
	
	
	// blue
	
	private double blue;
	
	/**
	 * Getter for property "blue".
	 *
	 * @return the value of property "blue"
	 */
	@JsonProperty
	public double getBlue() {
		return this.blue;
	}
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "GradientStop".
	 * 
	 * @param gradientStop the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(GradientStop gradientStop) {
		this.uid = gradientStop.getExtuid();
		//Disabled load for property: offset
		this.red = gradientStop.getRed();
		this.green = gradientStop.getGreen();
		this.blue = gradientStop.getBlue();
	}
	
	/**
	 * Saves this DTO to an entity object of type "GradientStop".
	 * 
	 * @param gradientStop the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(GradientStop gradientStop) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		//Disabled save for property: offset
		//Disabled save for property: red
		//Disabled save for property: green
		//Disabled save for property: blue
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("offset", this.offset);
		data.put("red", this.red);
		data.put("green", this.green);
		data.put("blue", this.blue);
		return data;
	}
	
}
