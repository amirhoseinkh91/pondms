package ir.viratech.pond_ms.api.time_series.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.time_series.dto.CategoryFullDTO;
import ir.viratech.pond_ms.model.time_series.Category;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "Category".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseCategoryFullDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<Category> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "CategoryFullDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<CategoryFullDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "name".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Name(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "childCount".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_ChildCount(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Integer(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "isLeaf".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_IsLeaf(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Boolean(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "isRoot".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_IsRoot(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Boolean(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "timeSeriesValueType".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_TimeSeriesValueType(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * Creates an EntityByDtoFinder for the DTO property "relatedGroup".
		 * The created object finds entities of type "ir.viratech.pond_ms.model.time_series.TimeSeriesGroup" 
		 * by DTO's of type "ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO".
		 * @return the created EntityByDtoFinder
		 */
		protected abstract ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.time_series.TimeSeriesGroup, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO> createEntityByDtoFinder_RelatedGroup();
		
		private ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.time_series.TimeSeriesGroup, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO> entityByDtoFinder_RelatedGroup;
		
		/**
		 * Getter for the previously created EntityByDtoFinder for property "relatedGroup".
		 * @return the previously created EntityByDtoFinder object 
		 */
		public final ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.time_series.TimeSeriesGroup, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO> getEntityByDtoFinder_RelatedGroup() {
			return this.entityByDtoFinder_RelatedGroup;
		}
		
		/**
		 * Finds entities of type "ir.viratech.pond_ms.model.time_series.TimeSeriesGroup" 
		 * by DTO's of type "ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO".
		 * It is targeted for the DTO property: relatedGroup
		 * @param relatedGroupDto 
		 *		the given dto by which the entity should be found
		 * @return the found entity
		 * @throws ir.viratech.commons.api.search.InvalidDtoException
		 * 		If the given dto is not valid or is not representing an internal entity
		 */
		public final ir.viratech.pond_ms.model.time_series.TimeSeriesGroup findByDto_RelatedGroup(ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO relatedGroupDto) throws ir.viratech.commons.api.search.InvalidDtoException {
			return this.getEntityByDtoFinder_RelatedGroup().findByDto(relatedGroupDto);
		}
		
		/**
		 * creates a DtoFieldInfo for dto-property "relatedGroup".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param fieldInfoContext the FieldInfoContext of the dto-property: relatedGroup
		 * @param entityByDtoFinder the EntityByDtoFinder for the dto-property: relatedGroup
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.DtoFieldInfo<ir.viratech.pond_ms.model.time_series.TimeSeriesGroup, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO> createFieldInfo_RelatedGroup(
				String externalName, String internalName, String internalSearchExpression, String bundleKey, boolean searchable, 
				ir.viratech.commons.api.search.field.FieldInfoContext<ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO> fieldInfoContext, 
				ir.viratech.commons.api.search.EntityByDtoFinder<ir.viratech.pond_ms.model.time_series.TimeSeriesGroup, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO> entityByDtoFinder) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_Dto<ir.viratech.pond_ms.model.time_series.TimeSeriesGroup, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO>(
						externalName, internalName, internalSearchExpression, bundleKey, searchable, fieldInfoContext, entityByDtoFinder);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "children".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Children(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "values".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Values(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Name("name", "name", "name", null, "name", true, null));
			this.putFieldInfo(this.createFieldInfo_ChildCount("childCount", "childCount", "childCount", null, "childCount", true, null));
			this.putFieldInfo(this.createFieldInfo_IsLeaf("isLeaf", "isLeaf", "isLeaf", null, "isLeaf", true, null));
			this.putFieldInfo(this.createFieldInfo_IsRoot("isRoot", "isRoot", "isRoot", null, "isRoot", true, null));
			this.putFieldInfo(this.createFieldInfo_TimeSeriesValueType("timeSeriesValueType", "timeSeriesValueType", "timeSeriesValueType", null, "timeSeriesValueType", true, false));
			this.entityByDtoFinder_RelatedGroup = createEntityByDtoFinder_RelatedGroup();
			this.putFieldInfo(this.createFieldInfo_RelatedGroup("relatedGroup", "relatedGroup", "relatedGroup", "relatedGroup", true, 
					getFieldInfoContextInstance(ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO.FieldInfoContext.class), this.getEntityByDtoFinder_RelatedGroup()));
			this.putFieldInfo(this.createFieldInfo_Children("children", "children", "children", "collection", "children", true, null));
			this.putFieldInfo(this.createFieldInfo_Values("values", "values", "values", "collection", "values", true, null));
		}
		
		/**
		 * Creates a DTO of type "CategoryFullDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public CategoryFullDTO createDto() {
			return new CategoryFullDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public CategoryFullDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(CategoryFullDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// name
	
	private String name;
	
	/**
	 * Getter for property "name".
	 *
	 * @return the value of property "name"
	 */
	@JsonProperty
	public String getName() {
		return this.name;
	}
	
	/**
	 * Setter for property "name".
	 *
	 * @param name the new value for property "name"
	 */
	public void setName(String name) {
		this.name = name;
	}
	
	
	// childCount
	
	private java.lang.Integer childCount;
	
	/**
	 * Getter for property "childCount".
	 *
	 * @return the value of property "childCount"
	 */
	@JsonProperty
	public java.lang.Integer getChildCount() {
		return this.childCount;
	}
	
	/**
	 * Used for loading the property childCount from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property childCount based on the given internal entity
	 */
	protected abstract java.lang.Integer load_ChildCount(Category category);
	
	
	// isLeaf
	
	private java.lang.Boolean isLeaf;
	
	/**
	 * Getter for property "isLeaf".
	 *
	 * @return the value of property "isLeaf"
	 */
	@JsonProperty
	public java.lang.Boolean isIsLeaf() {
		return this.isLeaf;
	}
	
	/**
	 * Used for loading the property isLeaf from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property isLeaf based on the given internal entity
	 */
	protected abstract java.lang.Boolean load_IsLeaf(Category category);
	
	
	// isRoot
	
	private java.lang.Boolean isRoot;
	
	/**
	 * Getter for property "isRoot".
	 *
	 * @return the value of property "isRoot"
	 */
	@JsonProperty
	public java.lang.Boolean isIsRoot() {
		return this.isRoot;
	}
	
	/**
	 * Used for loading the property isRoot from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property isRoot based on the given internal entity
	 */
	protected abstract java.lang.Boolean load_IsRoot(Category category);
	
	
	// timeSeriesValueType
	
	private String timeSeriesValueType;
	
	/**
	 * Getter for property "timeSeriesValueType".
	 *
	 * @return the value of property "timeSeriesValueType"
	 */
	@JsonProperty
	public String getTimeSeriesValueType() {
		return this.timeSeriesValueType;
	}
	
	/**
	 * Used for loading the property timeSeriesValueType from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property timeSeriesValueType based on the given internal entity
	 */
	protected abstract String load_TimeSeriesValueType(Category category);
	
	
	// relatedGroup
	
	private ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO relatedGroup;
	
	/**
	 * Getter for property "relatedGroup".
	 *
	 * @return the value of property "relatedGroup"
	 */
	@JsonProperty
	public ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO getRelatedGroup() {
		return this.relatedGroup;
	}
	
	/**
	 * Setter for property "relatedGroup".
	 *
	 * @param relatedGroup the new value for property "relatedGroup"
	 */
	public void setRelatedGroup(ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO relatedGroup) {
		this.relatedGroup = relatedGroup;
	}
	
	/**
	 * Used for loading the property relatedGroup from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property relatedGroup based on the given internal entity
	 */
	protected abstract ir.viratech.pond_ms.api.time_series.dto.TimeSeriesGroupLightDTO load_RelatedGroup(Category category);
	
	
	// children
	
	private ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> children;
	
	/**
	 * Getter for property "children".
	 *
	 * @return the value of property "children"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> getChildren() {
		return this.children;
	}
	
	/**
	 * Setter for property "children".
	 *
	 * @param children the new value for property "children"
	 */
	public void setChildren(ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> children) {
		this.children = children;
	}
	
	/**
	 * Used for loading the property children from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property children based on the given internal entity
	 */
	protected abstract ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.Category, ir.viratech.pond_ms.api.time_series.dto.CategoryLightDTO> load_Children(Category category);
	
	
	// values
	
	private ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.TimeSeriesDateValuePair, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesDateValuePairLightDTO> values;
	
	/**
	 * Getter for property "values".
	 *
	 * @return the value of property "values"
	 */
	@JsonProperty
	public ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.TimeSeriesDateValuePair, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesDateValuePairLightDTO> getValues() {
		return this.values;
	}
	
	/**
	 * Setter for property "values".
	 *
	 * @param values the new value for property "values"
	 */
	public void setValues(ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.TimeSeriesDateValuePair, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesDateValuePairLightDTO> values) {
		this.values = values;
	}
	
	/**
	 * Used for loading the property values from a given internal entity.
	 * 
	 * @param category the given internal entity
	 * @return the value of property values based on the given internal entity
	 */
	protected abstract ir.viratech.commons.api.dto.PlainCollectionDTO<ir.viratech.pond_ms.model.time_series.TimeSeriesDateValuePair, ir.viratech.pond_ms.api.time_series.dto.TimeSeriesDateValuePairLightDTO> load_Values(Category category);
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "Category".
	 * 
	 * @param category the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(Category category) {
		this.uid = category.getExtuid();
		this.name = category.getName();
		this.childCount = this.load_ChildCount(category);
		this.isLeaf = this.load_IsLeaf(category);
		this.isRoot = this.load_IsRoot(category);
		this.timeSeriesValueType = this.load_TimeSeriesValueType(category);
		this.relatedGroup = this.load_RelatedGroup(category);
		this.children = this.load_Children(category);
		this.values = this.load_Values(category);
	}
	
	/**
	 * Saves this DTO to an entity object of type "Category".
	 * 
	 * @param category the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(Category category) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		category.setName(this.name);
		//Disabled save for property: childCount
		//Disabled save for property: isLeaf
		//Disabled save for property: isRoot
		//Disabled save for property: timeSeriesValueType
		//Disabled save for property: relatedGroup
		//Disabled save for property: children
		//Disabled save for property: values
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("name", this.name);
		data.put("childCount", this.childCount);
		data.put("isLeaf", this.isLeaf);
		data.put("isRoot", this.isRoot);
		data.put("timeSeriesValueType", this.timeSeriesValueType);
		data.put("relatedGroup", this.relatedGroup);
		data.put("children", this.children);
		data.put("values", this.values);
		return data;
	}
	
}
