package ir.viratech.pond_ms.api.campaign.base;

import static ir.viratech.commons.api.field_info.FieldInfoContextProvider.getFieldInfoContextInstance;
import ir.viratech.pond_ms.api.campaign.dto.CampaignFlagUpSaveDTO;
import ir.viratech.pond_ms.model.campaign.Campaign;

import java.util.Map;

import com.fasterxml.jackson.annotation.JsonProperty;


/**
 * A base DTO for class "Campaign".
 * Do not edit this file.
 * It is an automatically generated class.
 *
 */
public abstract class BaseCampaignFlagUpSaveDTO extends ir.viratech.commons.api.dto.AbstractFullDTO<Campaign> {
	
	
	/**
	 * 
	 * Base FieldInfoContext for "CampaignFlagUpSaveDTO".
	 *
	 */
	public static abstract class BaseFieldInfoContext extends ir.viratech.commons.api.search.field.AbstractFieldInfoContext<CampaignFlagUpSaveDTO> {
		
		
		// =========== BEGIN createFieldInfo methods ===========
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "uid".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Uid(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "device_name".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Device_name(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		/**
		 * creates a PrimitiveFieldInfo for primitive property "destination".
		 * @param externalName the external name of the property in the DTO class
		 * @param internalName the internal name of the property in the entity class
		 * @param internalSearchExpression the internal search expression by which the property could be really searched
		 * @param typeKey a key showing the type of the property (used in client side) 
		 * @param bundleKey Used for i18n translation of the property
		 * @param searchable true if the property could be accessed in client search queries
		 * @param sortable true if the property could be used for sorting in client search queries
		 * @return the FieldInfo created for the property
		 */
		protected ir.viratech.commons.api.search.field.PrimitiveFieldInfo<?> createFieldInfo_Destination(
				String externalName, String internalName, String internalSearchExpression, String typeKey, String bundleKey, boolean searchable, Boolean sortable) {
			return new ir.viratech.commons.api.search.field.types.FieldInfo_String(externalName, internalName, internalSearchExpression, typeKey, bundleKey, searchable, sortable);
		}
		
		
		// =========== END createFieldInfo methods ===========
		
		/**
		 * The default constructor for BaseFieldInfoContext.
		 */
		protected BaseFieldInfoContext() {
			this.putFieldInfo(this.createFieldInfo_Uid("uid", "extuid", "extuid", null, "uid", true, false));
			this.putFieldInfo(this.createFieldInfo_Device_name("device_name", "device_name", "device_name", null, "device_name", true, null));
			this.putFieldInfo(this.createFieldInfo_Destination("destination", "destination", "destination", null, "destination", true, null));
			//Disabled fieldInfo for property: flag_up
		}
		
		/**
		 * Creates a DTO of type "CampaignFlagUpSaveDTO".
		 *
		 * @return the created DTO
		 */
		@Override
		public CampaignFlagUpSaveDTO createDto() {
			return new CampaignFlagUpSaveDTO();
		}
		
	}
	
	/**
	 * Provides the corresponding FieldInfoContext of this DTO.
	 *
	 * @return the corresponding FieldInfoContext object
	 */
	public CampaignFlagUpSaveDTO.FieldInfoContext getFieldInfoContext() {
		return getFieldInfoContextInstance(CampaignFlagUpSaveDTO.FieldInfoContext.class);
	}
	
	
	
	
	////////////////////
	// DTO Properties //
	////////////////////
	
	// uid
	
	private String uid;
	
	/**
	 * Getter for property "uid".
	 *
	 * @return the value of property "uid"
	 */
	@JsonProperty
	public String getUid() {
		return this.uid;
	}
	
	
	// device_name
	
	private String device_name;
	
	/**
	 * Getter for property "device_name".
	 *
	 * @return the value of property "device_name"
	 */
	@JsonProperty
	public String getDevice_name() {
		return this.device_name;
	}
	
	/**
	 * Setter for property "device_name".
	 *
	 * @param device_name the new value for property "device_name"
	 */
	public void setDevice_name(String device_name) {
		this.device_name = device_name;
	}
	
	
	// destination
	
	private String destination;
	
	/**
	 * Getter for property "destination".
	 *
	 * @return the value of property "destination"
	 */
	@JsonProperty
	public String getDestination() {
		return this.destination;
	}
	
	/**
	 * Setter for property "destination".
	 *
	 * @param destination the new value for property "destination"
	 */
	public void setDestination(String destination) {
		this.destination = destination;
	}
	
	
	// flag_up
	
	private boolean flag_up;
	
	/**
	 * Setter for property "flag_up".
	 *
	 * @param flag_up the new value for property "flag_up"
	 */
	@JsonProperty
	public void setFlag_up(boolean flag_up) {
		this.flag_up = flag_up;
	}
	
	/**
	/**
	 * Used for saving a given value of property flag_up to a given internal entity.
	 * 
	 * @param campaign
	 * 		the given internal entity
	 * @param flag_up 
	 * 		the value of property flag_up which should be saved to the given internal entity
	 * @throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException 
	 * 		if the given value of property flag_up is not appropriate for saving the entity
	 */
	protected abstract void save_Flag_up(Campaign campaign, boolean flag_up)
			throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException;
	
	
	
	/////////////////////////
	// save/load functions //
	/////////////////////////
	
	/**
	 * Loads this DTO from an entity object of type "Campaign".
	 * 
	 * @param campaign the entity object from which this DTO is loaded. 
	 */
	@Override
	public void loadFrom(Campaign campaign) {
		this.uid = campaign.getExtuid();
		this.device_name = campaign.getDevice_name();
		this.destination = campaign.getDestination();
		//Disabled load for property: flag_up
	}
	
	/**
	 * Saves this DTO to an entity object of type "Campaign".
	 * 
	 * @param campaign the entity object to which this DTO is saved. 
	 * @throws BadDtoEntityModificationException If this DTO is not valid for saving. 
	 */
	@Override
	public void saveTo(Campaign campaign) throws ir.viratech.commons.api.entity_modifier.BadDtoEntityModificationException {
		//Disabled save for property: uid
		campaign.setDevice_name(this.device_name);
		campaign.setDestination(this.destination);
		this.save_Flag_up(campaign, this.flag_up);
	}
	
	
	
	//////////////
	// toString //
	//////////////
	
	@Override
	protected Map<String, Object> toStringData() {
		Map<String, Object> data = super.toStringData();
		data.put("uid", this.uid);
		data.put("device_name", this.device_name);
		data.put("destination", this.destination);
		data.put("flag_up", this.flag_up);
		return data;
	}
	
}
