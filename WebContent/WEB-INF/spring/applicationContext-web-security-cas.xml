<?xml version="1.0" encoding="UTF-8"?>

<beans:beans xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
		xmlns="http://www.springframework.org/schema/security" 
		xmlns:beans="http://www.springframework.org/schema/beans" 
		xmlns:p="http://www.springframework.org/schema/p" 
		xmlns:context="http://www.springframework.org/schema/context" 
		xsi:schemaLocation="
			http://www.springframework.org/schema/beans 
			http://www.springframework.org/schema/beans/spring-beans.xsd 
			http://www.springframework.org/schema/context
			http://www.springframework.org/schema/context/spring-context.xsd
			http://www.springframework.org/schema/security 
			http://www.springframework.org/schema/security/spring-security.xsd" 
		profile="auth-cas" >
	
	<!--	Secure the API	-->
	<http pattern="/api/**" entry-point-ref="restAuthenticationEntryPoint" use-expressions="true">
		<intercept-url pattern="/api/user/signup"  access="permitAll"/>
		<intercept-url pattern="/**/*" access="hasAuthority('ACCESS_API')"/>
		<access-denied-handler ref="accessDeniedHandler"/>
	</http>
	
	<!-- Secure the page per the URL pattern -->
	<http pattern="/**" auto-config="true" entry-point-ref="casEntryPoint" use-expressions="true" >
		<intercept-url pattern="/css/*" access="permitAll" />
		<intercept-url pattern="/css/**/*" access="permitAll" />
		<intercept-url pattern="/img/*" access="permitAll" />
		<intercept-url pattern="/img/**/*" access="permitAll" />
		<intercept-url pattern="/**/*.png" access="permitAll" />
		<intercept-url pattern="/**/*.jpg" access="permitAll" />
		<intercept-url pattern="/**/*.bmp" access="permitAll" />
		<intercept-url pattern="/**/*.gif" access="permitAll" />
		<intercept-url pattern="/test/*.html" access="ROLE_see_home"/>
		<intercept-url pattern="/font/*" access="permitAll" />
		<intercept-url pattern="/common/*" access="permitAll" />
		<intercept-url pattern="/common/**/*" access="permitAll" />
		<intercept-url pattern="/static/*" access="permitAll" />
		<intercept-url pattern="/static/**/*" access="permitAll" />
		
		<intercept-url pattern="/**/*" access="hasAuthority('SEE_HOME')" />
		
		<custom-filter ref="requestSingleLogoutFilter" before="LOGOUT_FILTER" />
		<custom-filter ref="singleLogoutFilter" before="CAS_FILTER" />
		<custom-filter position="CAS_FILTER" ref="casFilter" />
		
		<logout logout-success-url="/" />
		<access-denied-handler error-page="/static/error-403.html" />
	</http>

	<!-- Enable the @PreAuthorize annotation to secure service layer methods -->
	<!-- The AccessDenied Exception throws when the user is not authorized will handle by AccessDeniedMapper class and convert to a response with code 403 -->
	<global-method-security pre-post-annotations="enabled" />

	<beans:bean id="restAuthenticationEntryPoint" class="ir.viratech.commons.api.auth.RestAuthenticationEntryPoint" />
	<beans:bean id="accessDeniedHandler" class="ir.viratech.commons.api.auth.ApiAuthorizationAccessDeniedHandler"/>
	
	<!-- Remove the "Role_" prefix -->
	<beans:bean id="roleVoter" class="org.springframework.security.access.vote.RoleVoter ">
		<beans:property name="rolePrefix" value="" />
	</beans:bean>

	
	<beans:bean id="userDetailsService" class="ir.viratech.pond_ms.api.auth.MyUserDetailsService" />
	
	<beans:bean id="singleLogoutFilter" class="org.jasig.cas.client.session.SingleSignOutFilter" />

	<!-- This filter redirects to the CAS Server to signal Single Logout should be performed -->
	<beans:bean id="requestSingleLogoutFilter" class="org.springframework.security.web.authentication.logout.LogoutFilter">
		<beans:constructor-arg value="${authServer.url}/logout?service=${server.url}" />
		<beans:constructor-arg>
			<beans:bean class="org.springframework.security.web.authentication.logout.SecurityContextLogoutHandler" />
		</beans:constructor-arg>
		<beans:property name="filterProcessesUrl" value="/j_spring_cas_security_logout" />
	</beans:bean>


	<beans:bean id="serviceProperties" class="org.springframework.security.cas.ServiceProperties">
		<beans:property name="service" value="${server.url}/j_spring_cas_security_check" />
		<beans:property name="sendRenew" value="false" />
	</beans:bean>

	<beans:bean id="casFilter" class="org.springframework.security.cas.web.CasAuthenticationFilter">
		<beans:property name="authenticationManager" ref="authenticationManager" />
	</beans:bean>

	<beans:bean id="casEntryPoint" class="org.springframework.security.cas.web.CasAuthenticationEntryPoint">
		<beans:property name="loginUrl" value="${authServer.url}/login?locale=fa" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
	</beans:bean>

	<beans:bean id="casAuthenticationProvider" class="org.springframework.security.cas.authentication.CasAuthenticationProvider">
		<beans:property name="userDetailsService" ref="userDetailsService" />
		<beans:property name="serviceProperties" ref="serviceProperties" />
		<beans:property name="ticketValidator">
			<beans:bean class="org.jasig.cas.client.validation.Cas20ServiceTicketValidator">
				<beans:constructor-arg index="0" value="${authServer.url}" />
			</beans:bean>
		</beans:property>
		<beans:property name="key" value="an_id_for_this_auth_provider_only" />
	</beans:bean>
	
	<authentication-manager alias="authenticationManager">
		<authentication-provider ref="casAuthenticationProvider" />
	</authentication-manager>
	
</beans:beans>
